name: CI

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify

        
      - name: Prepare artifact in staging
        run: mkdir staging && cp target/*.jar staging
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: Package
          path: staging

  sonar-cloud:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify
        
      - name: Official SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=${{ vars.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ vars.SONAR_ORGANIZATION }}
            -Dsonar.host.url=${{ secrets.SONAR_URL }}
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.working.directory=./.scannerwork
            -Dsonar.java.binaries=target/classes
                  - name: SonarQube Quality Gate Check
                  
      - name: Official SonarQube Quality Gate
        uses: SonarSource/sonarqube-quality-gate-action@1.2.0
        with:
          scanMetadataReportFile: .scannerwork/report-task.txt
          timeout-minutes: 5
          SONAR_HOST_URL: ${{secrets.SONAR_URL}}
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}

          

